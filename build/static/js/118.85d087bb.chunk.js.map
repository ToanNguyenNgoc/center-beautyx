{"version":3,"file":"static/js/118.85d087bb.chunk.js","mappings":"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","sources":["webpack://demo1/./src/app/pages/setup-home/setup.module.scss?f70c","app/pages/setup-home/data.ts","webpack://demo1/./src/app/pages/setup-home/components/cpn-style.module.scss?8be7","app/pages/setup-home/components/SectionBanners.tsx","webpack://demo1/./src/app/pages/setup-home/components-right/cpn-right.module.scss?5eef","app/pages/setup-home/components-right/RightBanner.tsx","app/pages/setup-home/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"setup_container__w1zdO\",\"head\":\"setup_head__6P0QV\",\"head_left\":\"setup_head_left__tTjKO\",\"body\":\"setup_body__6Tg7h\",\"body_left\":\"setup_body_left__tzyJU\",\"mobile_container\":\"setup_mobile_container__hCWg0\",\"desktop_container\":\"setup_desktop_container__1XhC1\",\"desktop_head\":\"setup_desktop_head__SFuQS\",\"body_right\":\"setup_body_right__F5M8w\",\"nav_container\":\"setup_nav_container__bD64s\",\"nav_head\":\"setup_nav_head__fvMIu\",\"nav_head_title\":\"setup_nav_head_title__4tYoI\",\"nav_head_img\":\"setup_nav_head_img__8O6Wj\",\"nav_body\":\"setup_nav_body__3S3LB\",\"nav_section_item\":\"setup_nav_section_item__rA7Iv\",\"nav_section_item_title\":\"setup_nav_section_item_title__qBrwb\",\"nav_section_body\":\"setup_nav_section_body__fXEHE\",\"btn_add\":\"setup_btn_add__0UPfN\",\"btn_add_title\":\"setup_btn_add_title__im7ci\",\"btn_add_layout_cnt\":\"setup_btn_add_layout_cnt__0YhoH\",\"btn_add_layout\":\"setup_btn_add_layout__az4oS\"};","import { ICONS } from '_metronic/assets/icons/icons';\n\nexport interface IDataLayout {\n    id: number,\n    layout_for: string,\n    layout_type: string,\n    icon: string,\n    title: string\n}\n\nconst dataLayout = [\n    { id: 1, layout_for: \"BANNERS\", layout_type: \"SLIDE\", icon: ICONS.bannersArray, title: \"Băng chuyền\" },\n    // { id: 2, layout_for: \"BANNERS\", layout_type: \"GRID\", icon: ICONS.layoutGrid, title: \"Lưới\" }\n]\nexport default dataLayout","// extracted by mini-css-extract-plugin\nexport default {\"section_banner_cnt\":\"cpn-style_section_banner_cnt__w1OZa\",\"section_focus\":\"cpn-style_section_focus__3ib6R\",\"banner_item_img\":\"cpn-style_banner_item_img__HuD15\"};","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useRef } from 'react';\nimport { IDataLayout } from '../data';\nimport style from './cpn-style.module.scss';\nimport { IBanner } from 'app/interface/banner';\nimport { settingsSlick } from 'app/util';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IRoot } from 'app/redux/interface';\nimport { fetchAsyncBanners } from 'app/redux/setup-home';\n\ninterface SectionBannersProps {\n    sectionBanner: IDataLayout\n}\n\nexport function SectionBanners(props: SectionBannersProps) {\n    const { sectionBanner } = props\n    const dispatch = useDispatch()\n    const settings = settingsSlick()\n    const refContainer = useRef<any>()\n    const clientHeight = refContainer?.current ? refContainer?.current?.clientWidth / 2.5 : 121\n    useEffect(() => {\n        dispatch(fetchAsyncBanners())\n    }, [])\n    const { sectionFocus, banners } = useSelector((state: IRoot) => state.HOME_SETUP)\n    return (\n        <div\n            ref={refContainer}\n            style={{ height: clientHeight }}\n            className={\n                sectionBanner.id === sectionFocus?.id ?\n                    `${style.section_banner_cnt} ${style.section_focus}`\n                    :\n                    `${style.section_banner_cnt}`\n            }\n        >\n            <Slider {...settings} >\n                {\n                    banners.map((item: IBanner, index: number) => (\n                        <div key={index} className={style.banner_item}>\n                            <img\n                                style={{ height: clientHeight }}\n                                className={style.banner_item_img} alt=\"\" src={item.imageURL}\n                            />\n                        </div>\n                    ))\n                }\n            </Slider>\n        </div>\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"cpn-right_container__JTgpI\",\"body\":\"cpn-right_body__owQKE\",\"banner_item_cnt\":\"cpn-right_banner_item_cnt__994XV\",\"banner_item\":\"cpn-right_banner_item__Q+EJ4\",\"banner_item_trigger\":\"cpn-right_banner_item_trigger__9NT80\",\"banner_item_img\":\"cpn-right_banner_item_img__jRyjl\",\"banner_item_control\":\"cpn-right_banner_item_control__gym-J\",\"banner_add\":\"cpn-right_banner_add__K4gjC\"};","import { IBanner } from 'app/interface/banner';\nimport { IRoot } from 'app/redux/interface';\nimport { onSortTableBanners } from 'app/redux/setup-home';\nimport { arrayMoveImmutable } from 'array-move';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    SortableContainer,\n    SortableContainerProps,\n    SortableElement,\n    SortableElementProps,\n    SortableHandle\n} from 'react-sortable-hoc';\nimport directRoute from 'app/routing/DirectRoute';\nimport style from './cpn-right.module.scss'\nimport { useNavigate } from 'react-router-dom';\n\nexport function RightBanner() {\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const { banners } = useSelector((state: IRoot) => state.HOME_SETUP)\n    const onSortEnd = ({ oldIndex, newIndex }: { oldIndex: number; newIndex: number }): void => {\n        dispatch(onSortTableBanners(arrayMoveImmutable(banners, oldIndex, newIndex)))\n    }\n    return (\n        <div className={style.container}>\n            <span className={style.title}>\n                Chỉnh sửa Banners\n            </span>\n            <table className={style.body}>\n                <SortableList\n                    lockAxis=\"y\"\n                    lockToContainerEdges={true}\n                    useDragHandle\n                    onSortEnd={onSortEnd}\n                >\n                    {\n                        banners.map((item: IBanner, index: number) => (\n                            <SortableItem\n                                key={`item-${index}`}\n                                index={index} className=\"item\"\n                            >\n                                <td className={style.banner_item_cnt}>\n                                    <div className={style.banner_item}>\n                                        <DndTrigger>\n                                            <div className={style.banner_item_trigger}>\n                                                <img src={item.imageURL} className={style.banner_item_img} alt=\"\" />\n                                                <div className={style.banner_item_control}>\n                                                    <div className=\"btn btn-icon btn-primary\">\n                                                        <i className=\"bi bi-arrow-bar-up\"></i>\n                                                    </div>\n                                                    <button\n                                                        onClick={() => navigate(directRoute.BANNERS_FORM_EDIT(item.id))}\n                                                        className=\"btn btn-icon btn-primary\"\n                                                    >\n                                                        <i className=\"bi bi-pencil\"></i>\n                                                    </button>\n                                                    <button className=\"btn btn-icon btn-danger\">\n                                                        <i className=\"bi bi-trash3\"></i>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </DndTrigger>\n                                    </div>\n                                </td>\n                            </SortableItem>\n                        ))\n                    }\n                </SortableList>\n                <button onClick={() => navigate(directRoute.BANNERS_FORM)} className={style.banner_add}>\n                    <i className=\"bi bi-file-plus fs-2qx\"></i>\n                    <span>Thêm mới Banners</span>\n                </button>\n            </table>\n        </div>\n    );\n}\ninterface ISortableItem extends SortableElementProps {\n    children: React.ReactNode\n    className?: string\n}\ninterface ISortableContainer extends SortableContainerProps {\n    children: React.ReactNode\n    className?: string\n}\n\nconst SortableItem: React.ComponentClass<ISortableItem, any> = SortableElement(\n    ({ children, className }: { children: React.ReactNode; className: string }) => (\n        <tr>{children}</tr>\n    )\n)\ninterface ISortableHandleElement {\n    children: React.ReactNode\n    className?: string\n}\n\nconst SortableList: React.ComponentClass<ISortableContainer, any> = SortableContainer(\n    ({ children, className }: { children: React.ReactNode; className: string }) => {\n        return <tbody>{children}</tbody>\n    }\n)\nconst DndTrigger: React.ComponentClass<ISortableHandleElement, any> = SortableHandle(\n    ({ children, className }: { children: React.ReactNode; className: string }) => (\n        <div className={className || ''}>{children}</div>\n    )\n)","import { Drawer } from '@mui/material';\nimport React, { useState } from 'react'\nimport { ICONS } from '_metronic/assets/icons/icons';\nimport style from './setup.module.scss';\nimport dataLayout, { IDataLayout } from './data';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onAddNewSection, onFocusSection } from 'app/redux/setup-home';\nimport { IRoot } from 'app/redux/interface';\nimport { SectionBanners } from './components';\nimport { RightBanner } from './components-right'\n\nfunction SetupHome() {\n    const [open, setOpen] = useState(false);\n    const [tab, setTab] = useState(1);\n    const { sectionFocus } = useSelector((state: IRoot) => state.HOME_SETUP)\n    return (\n        <>\n            <Nav open={open} setOpen={setOpen} />\n            <div className={style.container}>\n                <div className={style.head}>\n                    <div className={style.head_left}>\n                        <button onClick={() => setTab(1)}\n                            className={tab === 1 ? \"btn btn-primary\" : \"btn btn-secondary\"}>Điện thoại</button>\n                        <button onClick={() => setTab(2)}\n                            className={tab === 2 ? \"btn btn-primary\" : \"btn btn-secondary\"}>Máy tính</button>\n                    </div>\n                    <button className=\"btn btn-success\">Lưu thay đổi</button>\n                </div>\n                <div className={style.body}>\n                    <div className={style.body_left}>\n                        {tab === 1 && <MobileContainer setOpen={setOpen} />}\n                        {tab === 2 && <DesktopContainer setOpen={setOpen} />}\n                    </div>\n                    <div className={style.body_right}>\n                        {sectionFocus?.layout_for === \"BANNERS\" && <RightBanner />}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SetupHome;\n\ninterface MobileContainerProps {\n    setOpen: (open: boolean) => void\n}\nexport const MobileContainer = (props: MobileContainerProps) => {\n    const { sections } = useSelector((state: IRoot) => state.HOME_SETUP)\n    const { setOpen } = props\n    const sectionBanners = sections.filter((i: IDataLayout) => i.layout_for === \"BANNERS\")\n    return (\n        <div className={style.mobile_container}>\n            <div className={style.mobile_head}>\n                <img src={ICONS.headMobile} alt=\"\" />\n            </div>\n            {\n                sectionBanners.length > 0 &&\n                sectionBanners.map((item: IDataLayout, index: number) => (\n                    <SectionBanners key={index} sectionBanner={item} />\n                ))\n            }\n\n\n            <ButtonAddSection onClick={() => setOpen(true)} />\n        </div>\n    )\n}\n\ninterface DesktopContainerProps {\n    setOpen: (open: boolean) => void\n}\nexport const DesktopContainer = (props: DesktopContainerProps) => {\n    const { setOpen } = props;\n    return (\n        <div className={style.desktop_container}>\n            <div className={style.desktop_head}>\n                <img src={ICONS.headPc} alt=\"\" />\n            </div>\n            <ButtonAddSection onClick={() => setOpen(true)} />\n        </div>\n    )\n}\n\ninterface NavProp {\n    open: boolean, setOpen: (open: boolean) => void\n}\n\nexport const Nav = (props: NavProp) => {\n    const dispatch = useDispatch()\n    const { open, setOpen } = props\n    const handleAddNewSection = (item_layout: IDataLayout) => {\n        dispatch(onAddNewSection(item_layout))\n        dispatch(onFocusSection(item_layout))\n    }\n    return (\n        <Drawer\n            open={open}\n            onClose={() => setOpen(false)}\n            anchor=\"left\"\n        >\n            <div className={style.nav_container}>\n                <div className={style.nav_head}>\n                    <span className={style.nav_head_title}>Mẫu thiết kế</span>\n                    <img\n                        onClick={() => setOpen(false)}\n                        className={style.nav_head_img}\n                        src=\"/media/icons/duotune/arrows/arr015.svg\" alt=\"\" />\n                </div>\n                <div className={style.nav_body}>\n                    <div className={style.nav_section_item}>\n                        <span className={style.nav_section_item_title}>\n                            Banners\n                        </span>\n                        <div className={style.nav_section_body}>\n                            {\n                                dataLayout\n                                    .filter(i => i.layout_for === \"BANNERS\")\n                                    .map(i => (\n                                        <ButtonAddLayout\n                                            key={i.title}\n                                            icon={i.icon}\n                                            title={i.title}\n                                            onClick={() => handleAddNewSection(i)}\n                                        />\n                                    ))\n                            }\n                        </div>\n                    </div>\n                    <div className={style.nav_section_item}>\n                        <span className={style.nav_section_item_title}>\n                            Danh mục\n                        </span>\n                        <div className={style.nav_section_body}>\n                            {\n                                dataLayout\n                                    .filter(i => i.layout_for === \"BANNERS\")\n                                    .map(i => (\n                                        <ButtonAddLayout\n                                            key={i.title}\n                                            icon={i.icon}\n                                            title={i.title}\n                                        />\n                                    ))\n                            }\n                            {\n                                dataLayout\n                                    .filter(i => i.layout_for === \"BANNERS\")\n                                    .map(i => (\n                                        <ButtonAddLayout\n                                            key={i.title}\n                                            icon={i.icon}\n                                            title={i.title}\n                                        />\n                                    ))\n                            }\n                        </div>\n                    </div>\n                    <div className={style.nav_section_item}>\n                        <span className={style.nav_section_item_title}>\n                            Giảm giá\n                        </span>\n                        <div className={style.nav_section_body}>\n                            {\n                                dataLayout\n                                    .filter(i => i.layout_for === \"BANNERS\")\n                                    .map(i => (\n                                        <ButtonAddLayout\n                                            key={i.title}\n                                            icon={i.icon}\n                                            title={i.title}\n                                        />\n                                    ))\n                            }\n                        </div>\n                    </div>\n                    <div className={style.nav_section_item}>\n                        <span className={style.nav_section_item_title}>\n                            Dịch vụ\n                        </span>\n                        <div className={style.nav_section_body}>\n                            {\n                                dataLayout\n                                    .filter(i => i.layout_for === \"BANNERS\")\n                                    .map(i => (\n                                        <ButtonAddLayout\n                                            key={i.title}\n                                            icon={i.icon}\n                                            title={i.title}\n                                        />\n                                    ))\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Drawer>\n    )\n}\n\nexport const ButtonAddSection = ({ onClick }: { onClick: () => void }) => {\n    return (\n        <button\n            className={style.btn_add}\n            onClick={onClick}\n        >\n            <img src=\"/media/icons/duotune/arrows/arr013.svg\" alt=\"\" />\n            <span className={style.btn_add_title}>\n                Thêm section\n            </span>\n        </button>\n    )\n}\nexport const ButtonAddLayout = (\n    { onClick, icon, title }: { onClick?: () => void, icon: string, title: string }\n) => {\n    return (\n        <div className={style.btn_add_layout_cnt}>\n            <button\n                className={style.btn_add_layout}\n                onClick={onClick}\n            >\n                <img src={icon} alt=\"\" />\n            </button>\n            <span>{title}</span>\n        </div>\n    )\n}"],"names":["id","layout_for","layout_type","icon","ICONS","bannersArray","title","SectionBanners","props","_refContainer$current","sectionBanner","dispatch","useDispatch","settings","settingsSlick","refContainer","useRef","clientHeight","current","clientWidth","useEffect","fetchAsyncBanners","_useSelector","useSelector","state","HOME_SETUP","sectionFocus","banners","_jsx","ref","style","height","className","concat","section_banner_cnt","section_focus","children","Slider","_objectSpread","map","item","index","banner_item","banner_item_img","alt","src","imageURL","RightBanner","navigate","useNavigate","_jsxs","container","body","SortableList","lockAxis","lockToContainerEdges","useDragHandle","onSortEnd","_ref","oldIndex","newIndex","onSortTableBanners","arrayMoveImmutable","SortableItem","banner_item_cnt","DndTrigger","banner_item_trigger","banner_item_control","onClick","directRoute","BANNERS_FORM_EDIT","BANNERS_FORM","banner_add","SortableElement","_ref2","SortableContainer","_ref3","SortableHandle","_ref4","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","tab","setTab","_Fragment","Nav","head","head_left","body_left","MobileContainer","DesktopContainer","body_right","sections","sectionBanners","filter","i","mobile_container","mobile_head","headMobile","length","ButtonAddSection","desktop_container","desktop_head","headPc","Drawer","onClose","anchor","nav_container","nav_head","nav_head_title","nav_head_img","nav_body","nav_section_item","nav_section_item_title","nav_section_body","dataLayout","ButtonAddLayout","item_layout","onAddNewSection","onFocusSection","btn_add","btn_add_title","btn_add_layout_cnt","btn_add_layout"],"sourceRoot":""}