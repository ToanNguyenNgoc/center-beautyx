{"version":3,"file":"static/js/752.52a4efa8.chunk.js","mappings":"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","sources":["app/util/draggableImport.js","app/pages/banners/index.tsx","components/TitlePage/index.tsx"],"sourcesContent":["import {Draggable,Swappable} from \"@shopify/draggable\";\n// export const Sort = Sortable;\nfunction dragCustom(){\n    var containers = document.querySelectorAll(\".draggable-zone\");\n    if (containers.length === 0) {\n        return false;\n    }\n    \n    const draggable = new Swappable(containers, {\n        draggable:\".draggable\",\n        handle: \".draggable .draggable-handle\",\n        mirror: {\n            //appendTo: selector,\n            appendTo: \"body\",\n            constrainDimensions: true\n        }\n      });\n      \n      draggable.on('drag:start', () => console.log('drag:start'));\n      draggable.on('drag:move', () => console.log('drag:move'));\n      draggable.on('drag:stop', () => console.log('drag:stop'));\n}\nexport default dragCustom;","/* eslint-disable react-hooks/exhaustive-deps */\n// import Draggable from 'react-draggable';\nimport React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IRoot } from \"../../redux/interface\";\nimport './style.scss';\nimport { STATUS } from \"../../redux/status\";\nimport { fetchAsyncBanner, onResetFormBanner, onSortTableBanner } from \"../../redux/banner/bannerSlice\";\nimport { IBanner } from \"../../interface/banner\";\nimport dragCustom from \"../../util/draggableImport\";\nimport { Link } from \"react-router-dom\";\nimport TitlePage from \"../../../components/TitlePage\";\nimport { KTSVG, toAbsoluteUrl } from \"../../../_metronic/helpers\";\nimport {\n    SortableContainer,\n    SortableContainerProps,\n    SortableElement,\n    SortableElementProps,\n    SortableHandle\n} from \"react-sortable-hoc\";\nimport { arrayMoveImmutable } from \"array-move\";\nimport { formatDate } from \"../../util/format\";\nimport { BannerTypeElement } from \"../../util/fileType\";\nimport { useVerifyRoute } from \"app/hooks\";\n\nfunction BannerWidget(props: any) {\n    const { banner, status } = useSelector((state: IRoot) => state.BANNER);\n    const banners: IBanner[] = banner.data;\n    const bannerItemRef = useRef<any>();\n    const dispatch = useDispatch();\n    async function handleInitData() {\n        dispatch(fetchAsyncBanner());\n    }\n    const { METHOD } = useVerifyRoute()\n    useEffect(() => {\n        (banner.totalItem <= 0 && status !== STATUS.SUCCESS) && handleInitData()\n        dragCustom();\n        dispatch(onResetFormBanner())\n    }, [])\n\n    return (\n        <>\n            <TitlePage\n                element={\n                    // METHOD?.includes(\"POST\") ?\n                        <Link\n                            to={{ pathname: \"/pages/banners-form\" }}\n                            className=\"btn btn-sm btn-primary\"\n                        >\n                            Tạo mới\n                        </Link>\n                        // :\n                        // <></>\n                }\n                title=\"Danh sách banners\"\n            />\n            <div className=\"row g-5 gx-xxl-8 table-banner\">\n                <div ref={bannerItemRef} className={`card mb-5 mb-xl-8`}>\n                    <div className='card-header border-0 pt-5'>\n                        <h3 className='card-title align-items-start flex-column'>\n                            <span className='card-label fw-bold fs-3 mb-1'>Banners Campaigns</span>\n                            <span className='text-muted mt-1 fw-semobold fs-7'>{banners.length}</span>\n                        </h3>\n                    </div>\n                    {/* end::Header */}\n                    {/* begin::Body */}\n                    <div className='card-body py-3'>\n                        {/* begin::Table container */}\n                        <div className='table-responsive'>\n                            {/* begin::Table */}\n                            <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n                                {/* begin::Table head */}\n                                <thead>\n                                    <tr className='fw-bold text-muted'>\n                                        <th className='w-25px'>\n                                            <div className='form-check form-check-sm form-check-custom form-check-solid'>\n\n                                            </div>\n                                        </th>\n                                        <th className='min-w-150px'>Banner</th>\n                                        <th className='min-w-140px'>Loại</th>\n                                        <th className='min-w-140px'>Ngày hết hạn</th>\n                                        <th className='min-w-140px'>Nền tảng</th>\n                                        <th className='min-w-100px text-end'>Actions</th>\n                                    </tr>\n                                </thead>\n                                {/* end::Table head */}\n                                {/* begin::Table body */}\n                                <SortableComponent\n                                    banners={banners}\n                                />\n                                {/* end::Table body */}\n                            </table>\n                            {/* end::Table */}\n                        </div>\n                        {/* end::Table container */}\n                    </div>\n                </div>\n            </div>\n            {/* <SortableComponent /> */}\n        </>\n    )\n}\nexport default BannerWidget;\n\ninterface ISortableItem extends SortableElementProps {\n    children: React.ReactNode\n    className?: string\n}\ninterface ISortableContainer extends SortableContainerProps {\n    children: React.ReactNode\n    className?: string\n}\n\nconst SortableItem: React.ComponentClass<ISortableItem, any> = SortableElement(\n    ({ children, className }: { children: React.ReactNode; className: string }) => (\n        <tr>{children}</tr>\n    )\n)\ninterface ISortableHandleElement {\n    children: React.ReactNode\n    className?: string\n}\n\nconst SortableList: React.ComponentClass<ISortableContainer, any> = SortableContainer(\n    ({ children, className }: { children: React.ReactNode; className: string }) => {\n        return <tbody>{children}</tbody>\n    }\n)\nconst DndTrigger: React.ComponentClass<ISortableHandleElement, any> = SortableHandle(\n    ({ children, className }: { children: React.ReactNode; className: string }) => (\n        <div className={className || ''}>{children}</div>\n    )\n)\nconst SortableComponent = (props: any) => {\n    const { banners } = props;\n    const dispatch = useDispatch();\n\n    const onSortEnd = ({ oldIndex, newIndex }: { oldIndex: number; newIndex: number }): void => {\n        dispatch(onSortTableBanner(arrayMoveImmutable(banners, oldIndex, newIndex)))\n    }\n    // const { METHOD } = useVerifyRoute()\n    return (\n        <SortableList\n            lockAxis=\"y\"\n            lockToContainerEdges={true}\n            useDragHandle\n            onSortEnd={onSortEnd}\n\n        >\n            {banners.map((item: IBanner, index: number) => (\n                <SortableItem\n                    key={`item-${index}`}\n                    index={index} className=\"item\"\n                >\n                    <td>\n                        {\n                            // METHOD?.includes(\"UPDATE\") &&\n                            <DndTrigger className=\"itemTrigger\">\n                                <img src={toAbsoluteUrl(\"/media/icons/duotune/abstract/abs015.svg\")} alt=\"\" />\n                            </DndTrigger>\n                        }\n                    </td>\n                    <td>\n                        <div className='d-flex align-items-center'>\n                            <div className='symbol symbol-45px me-5'>\n                                <img className=\"banner-item__img\" src={item.imageURL} alt='' />\n                            </div>\n                            <div className='d-flex justify-content-start flex-column'>\n                                <span className='text-dark fw-bold text-hover-primary fs-6'>\n                                    {item.name}\n                                </span>\n                                <span className='text-muted fw-semobold text-muted d-block fs-7'>\n                                    {formatDate(item.created_at)}\n                                </span>\n                            </div>\n                        </div>\n                    </td>\n                    <td>\n                        <BannerTypeElement\n                            TYPE={item.type}\n                        />\n                    </td>\n                    <td>\n                        <span className='text-dark fw-bold text-hover-primary d-block fs-6'>\n                            {\"Không thời hạn\"}\n                        </span>\n                    </td>\n                    <td>\n                        <span className='text-dark fw-bold text-hover-primary d-block fs-6'>\n                            Tất cả\n                        </span>\n                    </td>\n                    <td>\n                        <div className='d-flex justify-content-end flex-shrink-0'>\n                            {\n                                // METHOD?.includes(\"UPDATE\") &&\n                                <Link\n                                    to={{\n                                        pathname: `/pages/banners-form/${item.id}`,\n                                    }}\n                                    className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\n                                >\n                                    <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\n                                </Link>\n                            }\n                            <Link\n                                to='#'\n                                className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'\n                            >\n                                <KTSVG\n                                    path='/media/icons/duotune/general/gen027.svg'\n                                    className='svg-icon-3'\n                                />\n                            </Link>\n                        </div>\n                    </td>\n                </SortableItem>\n            ))}\n        </SortableList>\n    )\n}\n\n","import React from 'react';\nimport './style.scss'\n\ninterface IProps {\n    title: string\n    element?: JSX.Element\n}\n\nfunction TitlePage(props: IProps) {\n    const { title, element } = props;\n    return (\n        <div className='toolbar' id='kt_toolbar'>\n            <div id=\"kt_toolbar_container\" className='container-fluid d-flex flex-stack'>\n                <h1 className='d-flex align-items-center text-dark fw-bolder my-1 fs-3'>\n                    {title}\n                </h1>\n                {element}\n            </div>\n        </div>\n    );\n}\n\nexport default TitlePage;"],"names":["containers","document","querySelectorAll","length","draggable","Swappable","handle","mirror","appendTo","constrainDimensions","on","console","log","props","_useSelector","useSelector","state","BANNER","banner","status","banners","data","bannerItemRef","useRef","dispatch","useDispatch","_handleInitData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","fetchAsyncBanner","stop","apply","arguments","useVerifyRoute","METHOD","useEffect","totalItem","STATUS","SUCCESS","handleInitData","dragCustom","onResetFormBanner","_jsxs","_Fragment","children","_jsx","TitlePage","element","Link","to","pathname","className","title","ref","SortableComponent","SortableItem","SortableElement","_ref","SortableList","SortableContainer","_ref2","DndTrigger","SortableHandle","_ref3","lockAxis","lockToContainerEdges","useDragHandle","onSortEnd","_ref4","oldIndex","newIndex","onSortTableBanner","arrayMoveImmutable","map","item","index","src","toAbsoluteUrl","alt","imageURL","name","formatDate","created_at","BannerTypeElement","TYPE","type","concat","id","KTSVG","path"],"sourceRoot":""}