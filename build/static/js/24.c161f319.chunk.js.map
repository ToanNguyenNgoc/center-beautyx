{"version":3,"file":"static/js/24.c161f319.chunk.js","mappings":"qMAqEA,UA3DA,WACI,IAAMA,GAAWC,EAAAA,EAAAA,MAEjBC,IADmBC,EAAAA,EAAAA,MAAXC,QACwBC,EAAAA,EAAAA,KAAO,EAAMC,EAAAA,GAAUC,QAA/CC,EAAQN,EAARM,SACFC,GADqBP,EAATQ,UACe,OAARF,QAAQ,IAARA,EAAAA,EAAY,IACrC,OACIG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACNC,MAAM,wBAEVF,EAAAA,EAAAA,KAAA,OAAKG,UAAS,oBAAsBJ,UAChCC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iBAAgBJ,UAC3BC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAkBJ,UAC7BF,EAAAA,EAAAA,MAAA,SAAOM,UAAU,+BAA8BJ,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,SAAAD,UACIF,EAAAA,EAAAA,MAAA,MAAIM,UAAU,8BAA6BJ,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,iCAAgCJ,SAAC,OAC/CC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,cAAaJ,SAAC,uBAC5BC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,cAAaJ,SAAC,iBAGpCC,EAAAA,EAAAA,KAAA,SAAAD,SAEQJ,EAAMS,KAAI,SAACC,GAAa,OACpBR,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,QAAMG,UAAU,8BAA6BJ,SACxCM,EAAKC,QAGdN,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,QAAMG,UAAU,yDAAwDJ,SACnEM,EAAKE,UAGdP,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,OAAKQ,MAAO,CAAEC,MAAO,SAAUV,UAC3BC,EAAAA,EAAAA,KAACU,EAAAA,GAAO,CACJR,MAAM,sBACNS,MAAM,UACNC,QAAS,kBAAM1B,EAAS2B,EAAAA,EAAYC,qBAAqBT,EAAKC,IAAI,UAhBzED,EAAKC,GAoBT,iBAa7C,C,gFC7CA,MAdA,SAAmBS,GACf,IAAQb,EAAmBa,EAAnBb,MAAOc,EAAYD,EAAZC,QACf,OACIhB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,UAAUG,GAAG,aAAYP,UACpCF,EAAAA,EAAAA,MAAA,OAAKS,GAAG,uBAAuBH,UAAU,oCAAmCJ,SAAA,EACxEC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,0DAAyDJ,SAClEG,IAEJc,MAIjB,C","sources":["app/pages/roles/index.tsx","components/TitlePage/index.tsx"],"sourcesContent":["import TitlePage from 'components/TitlePage';\nimport React from 'react';\nimport { useSwr, useVerifyRoute } from 'app/hooks'\nimport { IAUTHOR } from 'app/interface'\nimport { API_ROUTE } from 'app/api/api-route';\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers';\nimport { XButton } from 'components'\nimport directRoute from 'app/routing/DirectRoute';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Roles() {\n    const navigate = useNavigate()\n    const { METHOD } = useVerifyRoute()\n    const { response, totalItem } = useSwr(true, API_ROUTE.ROLES)\n    const roles: IAUTHOR[] = response ?? []\n    return (\n        <>\n            <TitlePage\n                title='Phân quyền'\n            />\n            <div className={`card mb-5 mb-xl-8`}>\n                <div className='card-body py-3'>\n                    <div className='table-responsive'>\n                        <table className='table align-middle gs-0 gy-4'>\n                            <thead>\n                                <tr className='fw-bold text-muted bg-light'>\n                                    <th className='ps-4 min-w-300px rounded-start'>#</th>\n                                    <th className='min-w-125px'>Tên quyền</th>\n                                    <th className='min-w-250px'>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    roles.map((item: IAUTHOR) => (\n                                        <tr key={item.id}>\n                                            <td>\n                                                <span className='text-dark fw-bold mb-1 fs-6'>\n                                                    {item.id}\n                                                </span>\n                                            </td>\n                                            <td>\n                                                <span className='text-dark fw-bold text-hover-primary d-block mb-1 fs-6'>\n                                                    {item.name}\n                                                </span>\n                                            </td>\n                                            <td>\n                                                <div style={{ width: \"100px\" }}>\n                                                    <XButton\n                                                        title='Cấp quyền'\n                                                        color=\"success\"\n                                                        onClick={() => navigate(directRoute.ROLES_ID_PERMISSIONS(item.id))}\n                                                    />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    ))\n                                }\n                            </tbody>\n                            {/* end::Table body */}\n                        </table>\n                        {/* end::Table */}\n                    </div>\n                    {/* end::Table container */}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Roles;","import React from 'react';\nimport './style.scss'\n\ninterface IProps {\n    title: string\n    element?: JSX.Element\n}\n\nfunction TitlePage(props: IProps) {\n    const { title, element } = props;\n    return (\n        <div className='toolbar' id='kt_toolbar'>\n            <div id=\"kt_toolbar_container\" className='container-fluid d-flex flex-stack'>\n                <h1 className='d-flex align-items-center text-dark fw-bolder my-1 fs-3'>\n                    {title}\n                </h1>\n                {element}\n            </div>\n        </div>\n    );\n}\n\nexport default TitlePage;"],"names":["navigate","useNavigate","_useSwr","useVerifyRoute","METHOD","useSwr","API_ROUTE","ROLES","response","roles","totalItem","_jsxs","_Fragment","children","_jsx","TitlePage","title","className","map","item","id","name","style","width","XButton","color","onClick","directRoute","ROLES_ID_PERMISSIONS","props","element"],"sourceRoot":""}